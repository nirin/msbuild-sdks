<Project>

	<!-- Load `NuGet.Build.Tasks.Pack.dll`, this can be overridden to use a different version with `NuGetPackTaskAssembly` -->
	<PropertyGroup Condition="$(NuGetPackTaskAssembly) == ''">
		<NuGetPackTaskAssemblyFile Condition="'$(NuGetPackTaskAssemblyFile)' == ''">NuGet.Build.Tasks.Pack.dll</NuGetPackTaskAssemblyFile>
		<NuGetPackTaskAssemblyPath Condition="'$(NuGetPackTaskAssemblyPath)' == ''">$([System.IO.Path]::Combine('$(MSBuildThisFileDirectory)', '$(MSBuildRuntimeType)'))</NuGetPackTaskAssemblyPath>
		<NuGetPackTaskAssembly>$([System.IO.Path]::Combine('$(NuGetPackTaskAssemblyPath)', '$(NuGetPackTaskAssemblyFile)'))</NuGetPackTaskAssembly>
	</PropertyGroup>

	<UsingTask TaskName="NuGet.Build.Tasks.Pack.PackTask" AssemblyFile="$(NuGetPackTaskAssembly)"/>
	<UsingTask TaskName="NuGet.Build.Tasks.Pack.GetPackOutputItemsTask" AssemblyFile="$(NuGetPackTaskAssembly)"/>
	<UsingTask TaskName="NuGet.Build.Tasks.GetProjectTargetFrameworksTask" AssemblyFile="$(NuGetPackTaskAssembly)"/>
	<UsingTask TaskName="NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask" AssemblyFile="$(NuGetPackTaskAssembly)"/>
	<UsingTask TaskName="NuGet.Build.Tasks.Pack.IsPackableFalseWarningTask" AssemblyFile="$(NuGetPackTaskAssembly)"/>

</Project>
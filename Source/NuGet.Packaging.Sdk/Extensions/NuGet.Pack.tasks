<Project>

	<!-- Load `NuGet.Build.Tasks.Pack.dll`, this can be overridden to use a different version with `NuGetPackTaskAssembly` -->
	<PropertyGroup Condition="$(NuGetPackTaskAssembly) == ''">
		<NuGetPackTaskAssemblyFile Condition="'$(NuGetPackTaskAssemblyFile)' == ''">NuGet.Build.Tasks.Pack.dll</NuGetPackTaskAssemblyFile>
		<NuGetPackTaskAssemblyPath Condition="'$(NuGetPackTaskAssemblyPath)' == ''">..\Tasks\$(MSBuildRuntimeType)</NuGetPackTaskAssemblyPath>
		<NuGetPackTaskAssembly>$(NuGetPackTaskAssemblyPath)\$(NuGetPackTaskAssemblyFile)</NuGetPackTaskAssembly>
	</PropertyGroup>

	<!-- NuGet's Common Tasks -->
	<UsingTask AssemblyFile="$(NuGetPackTaskAssembly)" TaskName="NuGet.Build.Tasks.GetProjectTargetFrameworksTask"/>

	<!-- NuGet's Pack specific Tasks -->
	<UsingTask AssemblyFile="$(NuGetPackTaskAssembly)" TaskName="NuGet.Build.Tasks.Pack.PackTask"/>
	<UsingTask AssemblyFile="$(NuGetPackTaskAssembly)" TaskName="NuGet.Build.Tasks.Pack.GetPackOutputItemsTask"/>
	<UsingTask AssemblyFile="$(NuGetPackTaskAssembly)" TaskName="NuGet.Build.Tasks.Pack.IsPackableFalseWarningTask"/>
	<UsingTask AssemblyFile="$(NuGetPackTaskAssembly)" TaskName="NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask"/>

</Project>
<Project>

	<PropertyGroup>
		<EnableDefaultItems Condition="'$(EnableDefaultItems)' == ''">true</EnableDefaultItems>
		<EnableDefaultNoneItems Condition="'$(EnableDefaultNoneItems)' == ''">true</EnableDefaultNoneItems>
		<ExcludeDefaultBuildFiles Condition="'$(ExcludeDefaultBuildFiles)' == ''">false</ExcludeDefaultBuildFiles>
	</PropertyGroup>

	<!--
		Set `DefaultItemExcludes` property for items that should be excluded by default.
	-->

	<!-- Various files that should generally always be ignored -->
	<PropertyGroup>
		<DefaultItemExcludes>$(DefaultItemExcludes);**\*.slnx</DefaultItemExcludes>
		<DefaultItemExcludes>$(DefaultItemExcludes);**\*.user</DefaultItemExcludes>
	</PropertyGroup>

	<!-- Legacy files, not used anymore -->
	<PropertyGroup>
		<DefaultItemExcludes>$(DefaultItemExcludes);**\*.sln</DefaultItemExcludes>
		<DefaultItemExcludes>$(DefaultItemExcludes);**\*.projitems</DefaultItemExcludes>
		<DefaultItemExcludes>$(DefaultItemExcludes);**\*.vssscc</DefaultItemExcludes>
	</PropertyGroup>

	<PropertyGroup Condition="'$(ExcludeDefaultBuildFiles)' == 'true'">
		<DefaultItemExcludes>$(DefaultItemExcludes);*.props</DefaultItemExcludes>
		<DefaultItemExcludes>$(DefaultItemExcludes);*.items</DefaultItemExcludes>
		<DefaultItemExcludes>$(DefaultItemExcludes);*.tasks</DefaultItemExcludes>
		<DefaultItemExcludes>$(DefaultItemExcludes);*.targets</DefaultItemExcludes>
	</PropertyGroup>

	<!--
		WARNING: This pattern is there to ignore folders such as .git and .vs, but it will also match items included with a
		relative path outside the solution folder (for example "..\Shared\Shared.cs").  So be sure only to apply it to items
		that are in the solution folder.
	-->
	<PropertyGroup>
		<DefaultExcludesInSolutionFolder>$(DefaultItemExcludesInSolutionFolder);**\.*\**</DefaultExcludesInSolutionFolder>
	</PropertyGroup>

</Project>
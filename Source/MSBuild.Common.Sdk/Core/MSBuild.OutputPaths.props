<Project>

	<!--
		We need to initialize `$(BuildDir)` separately and before the `MSBuild.OutputPaths.targets` import,
		since `$(MSBuildProjectExtensionsPath)` uses it to import custom props from Package Managers and Tools.
	-->
	<PropertyGroup Label="Build">
		<BuildDirName Condition="'$(BuildDirName)' == ''">build</BuildDirName>
		<BuildDir Condition="'$(BuildPath)' == ''">$(BuildDirName)</BuildDir>
	</PropertyGroup>

	<PropertyGroup Label="Build" Condition="$([System.IO.Path]::IsPathRooted('$(BuildDir)'))">
		<AppendProjectNameToBuildDir Condition="'$(AppendProjectNameToBuildDir)' == ''">true</AppendProjectNameToBuildDir>
		<BuildDir Condition="'$(AppendProjectNameToBuildDir)' == 'true' AND !$(BuildDir.StartsWith('$(MSBuildProjectDirectory)'))">$([System.IO.Path]::Combine('$(BuildDir)', '$(MSBuildProjectName)'))</BuildDir>
	</PropertyGroup>

	<PropertyGroup Label="Build">
		<BuildDir>$([MSBuild]::EnsureTrailingSlash('$(BuildDir)'))</BuildDir>
		<_InitialBuildDir>$(BuildDir)</_InitialBuildDir>
	</PropertyGroup>

	<!-- Set `$(DefaultItemExcludes)` property for output paths that should be excluded from the default items only when under project directory. -->
	<PropertyGroup Condition="!$([System.IO.Path]::IsPathRooted('$(BuildDir)')) OR $(BuildDir.StartsWith('$(MSBuildProjectDirectory)'))">
		<!-- Exclude build directory, by default -->
		<DefaultItemExcludes>$(BuildDir)**;$(DefaultItemExcludes)</DefaultItemExcludes>
	</PropertyGroup>

	<PropertyGroup>
		<ImportedMSBuildOutputPathsProps>true</ImportedMSBuildOutputPathsProps>
	</PropertyGroup>

</Project>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<Import Project="$(MSBuildThisFileDirectory)DisableExtensions\Microsoft.Common.props"/>

	<!--
		In VS 2010 SP1 and VS 2012, both supported for asset compatibility, the MSBuild installed
		as part of them did not enforce using the local ToolsVersion (4.0) in all cases, but instead
		just used whatever ToolsVersion was in the project file if it existed on the machine, and
		only forced 4.0 if that ToolsVersion did not exist.

		Moving forward, we do want to enforce a single acting ToolsVersion per version of Visual Studio,
		but in order to approximate this behavior on VS 2010 SP1 and VS 2012 as well, we've redirected
		the targets:  If we're building using 4.X MSBuild (which doesn't define the new reserved
		property, MSBuildAssemblyVersion), we'll point right back at the 4.0 targets, which still exist
		as part of the .NET Framework.  Only if we're using the new MSBuild will we point to the current
		targets.
	-->
	<PropertyGroup>
		<MicrosoftCommonProps40Path>$(MSBuildExtensionsPath)\4.0\Microsoft.Common.props</MicrosoftCommonProps40Path>
	</PropertyGroup>

	<!--
		Reset VisualStudioVersion if it's 12.0+: Should be 10.0 if VS 2010 is installed or 11.0 otherwise,
		but since we don't have a good way of telling whether VS 2010 is installed, make it 11.0 if
		VS 2012 is installed or 10.0 otherwise.  The reset should be safe because if it was already
		set to something (e.g. 11.0 in a VS 2012 command prompt) then MSBuild's internal
		VisualStudioVersion-defaulting code should never come into the picture, so the only way it could
		be 12.0+ when building a TV 12.0 project (because we're in this file) using MSBuild 4.5 (because
		MSBuildAssemblyVersion hasn't been set) is if it's a TV 12.0 project on an empty command prompt.
	-->
	<PropertyGroup Condition="'$(VisualStudioVersion)' != '' AND '$(VisualStudioVersion)' >= '12.0'">
		<VisualStudioVersion Condition="Exists('$(MicrosoftCommonProps40Path)')">11.0</VisualStudioVersion>
		<VisualStudioVersion Condition="!Exists('$(MicrosoftCommonProps40Path)')">10.0</VisualStudioVersion>
	</PropertyGroup>

	<!--
		If building using 4.X MSBuild, we want to act like this project is TV 4.0, so import
		Microsoft.Common.props from the 4.0 location, and make sure everything else in here is
		set up such that if it's defaulted to something there, it won't be overridden here.
	-->
	<Import Project="$(MicrosoftCommonProps40Path)" Condition="Exists('$(MicrosoftCommonProps40Path)')"/>
	<Import Project="$(MSBuildLegacySdkPath)Current\Microsoft.Common.props"/>

</Project>
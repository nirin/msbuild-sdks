<Project>

	<!-- Load `Microsoft.Activities.Build.dll`, this can be overridden to use a different version with `WorkflowBuildExtensionAssembly` properties -->
	<PropertyGroup>
		<WorkflowBuildExtensionAssemblyFile Condition="'$(WorkflowBuildExtensionAssemblyFile)' == ''">$([System.IO.Path]::Combine('$(MSBuildFrameworkToolsPath)', 'Microsoft.Activities.Build.dll'))</WorkflowBuildExtensionAssemblyFile>
		<WorkflowBuildExtensionAssemblyName Condition="'$(WorkflowBuildExtensionAssemblyName)' == ''">Microsoft.Activities.Build, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35</WorkflowBuildExtensionAssemblyName>
	</PropertyGroup>

	<UsingTask AssemblyFile="$(WorkflowBuildExtensionAssemblyFile)" Condition="'$(ResolveTasksFromAssemblyName)' != 'true'" TaskName="DeferredValidationTask"/>
	<UsingTask AssemblyName="$(WorkflowBuildExtensionAssemblyName)" Condition="'$(ResolveTasksFromAssemblyName)' == 'true'" TaskName="DeferredValidationTask"/>

	<UsingTask AssemblyFile="$(WorkflowBuildExtensionAssemblyFile)" Condition="'$(ResolveTasksFromAssemblyName)' != 'true'" TaskName="WorkflowBuildMessageTask"/>
	<UsingTask AssemblyName="$(WorkflowBuildExtensionAssemblyName)" Condition="'$(ResolveTasksFromAssemblyName)' == 'true'" TaskName="WorkflowBuildMessageTask"/>

	<UsingTask AssemblyFile="$(WorkflowBuildExtensionAssemblyFile)" Condition="'$(ResolveTasksFromAssemblyName)' != 'true'" TaskName="ReportDeferredValidationErrorsTask"/>
	<UsingTask AssemblyName="$(WorkflowBuildExtensionAssemblyName)" Condition="'$(ResolveTasksFromAssemblyName)' == 'true'" TaskName="ReportDeferredValidationErrorsTask"/>

	<PropertyGroup>
		<PrepareResourcesDependsOn>
			ValidationExtension;
			ExpressionBuildExtension;
			$(PrepareResourcesDependsOn)
		</PrepareResourcesDependsOn>
	</PropertyGroup>

	<PropertyGroup>
		<CoreCompileDependsOn Condition="'$(BuildingInsideVisualStudio)' == 'true'">
			GenerateCompiledExpressionsTempFile;
			$(CoreCompileDependsOn)
		</CoreCompileDependsOn>
	</PropertyGroup>

	<ItemGroup>
		<XamlBuildTaskTypeGenerationExtensionName Include="Microsoft.Activities.Build.BeforeInitializeComponentExtension">
			<AssemblyName>$(WorkflowBuildExtensionAssemblyName)</AssemblyName>
			<Visible>false</Visible>
		</XamlBuildTaskTypeGenerationExtensionName>
		<XamlBuildTaskTypeGenerationExtensionName Include="Microsoft.Activities.Build.Debugger.DebugBuildExtension">
			<AssemblyName>$(WorkflowBuildExtensionAssemblyName)</AssemblyName>
			<Visible>false</Visible>
		</XamlBuildTaskTypeGenerationExtensionName>
	</ItemGroup>

	<Target Name="ExpressionBuildExtension">
		<WorkflowBuildMessageTask ResourceName="InvalidValueForDisableWorkflowCompiledExpressions" MessageType="Warning"
			Condition="'$(DisableWorkflowCompiledExpressions)' != '' AND '$(DisableWorkflowCompiledExpressions)' != 'true' AND '$(DisableWorkflowCompiledExpressions)' != 'false'">
		</WorkflowBuildMessageTask>

		<ItemGroup>
			<XamlBuildTaskTypeInspectionExtensionName Include="Microsoft.Activities.Build.Expressions.ExpressionsBuildExtension" Condition="$(DisableWorkflowCompiledExpressions)!=true">
				<AssemblyName>$(WorkflowBuildExtensionAssemblyName)</AssemblyName>
				<Visible>false</Visible>
			</XamlBuildTaskTypeInspectionExtensionName>
		</ItemGroup>
	</Target>

	<!-- XBT Validation Extension-->
	<Target Name="ValidationExtension">
		<WorkflowBuildMessageTask ResourceName="InvalidValueForSkipWorkflowValidation" MessageType="Warning"
			Condition="'$(SkipWorkflowValidation)' != '' AND '$(SkipWorkflowValidation)' != 'true' AND '$(SkipWorkflowValidation)' != 'false'">
		</WorkflowBuildMessageTask>

		<ItemGroup>
			<XamlBuildTaskTypeInspectionExtensionName Include="Microsoft.Activities.Build.Validation.ValidationBuildExtension" Condition="'$(SkipWorkflowValidation)' != 'true'">
				<AssemblyName>$(WorkflowBuildExtensionAssemblyName)</AssemblyName>
				<Visible>false</Visible>
			</XamlBuildTaskTypeInspectionExtensionName>
		</ItemGroup>
	</Target>

	<Target Name="GenerateCompiledExpressionsTempFile">

		<!-- Determine the source language extension from the project file's extension -->
		<PropertyGroup>
			<_LanguageExtension Condition="'$(MSBuildProjectExtension)' == '.csproj'">cs</_LanguageExtension>
			<_LanguageExtension Condition="'$(MSBuildProjectExtension)' == '.fsproj'">fs</_LanguageExtension>
			<_LanguageExtension Condition="'$(MSBuildProjectExtension)' == '.vbproj'">vb</_LanguageExtension>
		</PropertyGroup>

		<!-- Temporary Generated files for Compiled Expressions -->
		<PropertyGroup Condition="'$(_LanguageExtension)' != ''">
			<GenerateCompiledExpressionsTempFilePathForEditing>$(IntermediateOutputPath)\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.$(_LanguageExtension)</GenerateCompiledExpressionsTempFilePathForEditing>
			<GenerateCompiledExpressionsTempFilePathForValidation>$(IntermediateOutputPath)\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.$(_LanguageExtension)</GenerateCompiledExpressionsTempFilePathForValidation>
			<GenerateCompiledExpressionsTempFilePathForTypeInfer>$(IntermediateOutputPath)\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.$(_LanguageExtension)</GenerateCompiledExpressionsTempFilePathForTypeInfer>
		</PropertyGroup>

		<WriteLinesToFile File="$(GenerateCompiledExpressionsTempFilePathForEditing)" Condition="!Exists('$(GenerateCompiledExpressionsTempFilePathForEditing)')"/>
		<WriteLinesToFile File="$(GenerateCompiledExpressionsTempFilePathForValidation)" Condition="!Exists('$(GenerateCompiledExpressionsTempFilePathForValidation)')"/>
		<WriteLinesToFile File="$(GenerateCompiledExpressionsTempFilePathForTypeInfer)" Condition="!Exists('$(GenerateCompiledExpressionsTempFilePathForTypeInfer)')"/>

		<ItemGroup>
			<Compile Include="$(GenerateCompiledExpressionsTempFilePathForEditing)"/>
			<Compile Include="$(GenerateCompiledExpressionsTempFilePathForValidation)"/>
			<Compile Include="$(GenerateCompiledExpressionsTempFilePathForTypeInfer)"/>
		</ItemGroup>
	</Target>

	<PropertyGroup>
		<DeferredValidationErrorsFileName>AC2C1ABA-CCF6-44D4-8127-588FD4D0A860-DeferredValidationErrors.xml</DeferredValidationErrorsFileName>
		<DeferredValidationErrorsFilePath>$(IntermediateOutputPath)\$(DeferredValidationErrorsFileName)</DeferredValidationErrorsFilePath>
	</PropertyGroup>

	<Target Name="AddDeferredValidationErrorsFileToFileWrites" AfterTargets="XamlMarkupCompilePass2" Condition="Exists('$(DeferredValidationErrorsFilePath)')">
		<ItemGroup>
			<FileWrites Include="$(DeferredValidationErrorsFilePath)"/>
		</ItemGroup>
	</Target>

	<!--
	================================================================
				ReportValidationBuildExtensionErrors

	Report deferred validation extension errors through a XML log file.
	================================================================
	-->
	<Target Name="ReportValidationBuildExtensionErrors" AfterTargets="XamlMarkupCompilePass2" Condition="'$(SkipWorkflowValidation)' != 'true' AND ('@(XamlPage)' != '' OR '@(XamlAppDef)' != '')">
		<ReportDeferredValidationErrorsTask DeferredValidationErrorsFilePath="$(DeferredValidationErrorsFilePath)"/>
	</Target>

	<!--
	==================================================================
							DeferredValidation

	Fail the entire build process in case any validation errors
	been previously reported, but after Compile succeeded.
	==================================================================
	-->
	<Target Name="DeferredValidation" AfterTargets="Compile" Condition="'$(SkipWorkflowValidation)' != 'true' AND ('@(XamlPage)' != '' OR '@(XamlAppDef)' != '')">
		<DeferredValidationTask DeferredValidationErrorsFilePath="$(DeferredValidationErrorsFilePath)"/>
	</Target>

</Project>
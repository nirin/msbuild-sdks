<Project>

	<!--
		The .NET Sdk targets ('Microsoft.NET.Sdk') adds all transitive project references to 'ProjectReference'.
		It does this at build time via a target. If we are not building transitive project references,
		then MSBuild will not add those in the static graph and subsequently will not build them.
	-->
	<PropertyGroup Condition="'$(UsingMicrosoftNETSdk)' == 'true' AND '$(IsGraphBuild)' == 'true'">
		<AddTransitiveProjectReferencesInStaticGraph Condition="'$(AddTransitiveProjectReferencesInStaticGraph)' == '' AND '$(DisableTransitiveProjectReferences)' != 'true'">true</AddTransitiveProjectReferencesInStaticGraph>
	</PropertyGroup>

	<!--
		WPF projects generate a project with a random name at build time and then build the project via the 'IBuildEngine' callbacks.
		Detect WPF, and exclude the generated project from static graph isolation constraint checking.
		Escape the item to avoid eager evaluation of the wildcards.
	-->
	<ItemGroup Condition="'$(IsGraphBuild)' == 'true'">
		<GraphIsolationExemptReference
			Condition="'$(UseWPF)' == 'true' OR '@(Page)' != '' OR '@(ApplicationDefinition)' != '' OR '@(XamlPage)' != '' OR '@(XamlAppDef)' != ''"
			Include="$([MSBuild]::Escape('$(MSBuildProjectDirectory)\$(MSBuildProjectName)*_wpftmp$(MSBuildProjectExtension)'))"/>
	</ItemGroup>

	<!--
		Properties for extension of 'ProjectReferenceTargets'.
		Append any current value which may have been provided in a 'Directory.Build.targets' since the intent was likely to append, not prepend.
	-->
	<PropertyGroup Condition="'$(IsGraphBuild)' == 'true'">
		<!-- Empty case is for outer builds which do not import the target files that set 'BuildProjectReferences' -->
		<_MainReferenceTarget Condition="'$(BuildProjectReferences)' == '' OR '$(BuildProjectReferences)' == 'true'">.projectReferenceTargetsOrDefaultTargets</_MainReferenceTarget>
		<_MainReferenceTarget Condition="'$(_MainReferenceTarget)' == ''">GetTargetPath</_MainReferenceTarget>

		<ProjectReferenceTargetsForBuildInOuterBuild>GetTargetFrameworks;$(ProjectReferenceTargetsForBuildInOuterBuild)</ProjectReferenceTargetsForBuildInOuterBuild>
		<ProjectReferenceTargetsForBuild>$(_MainReferenceTarget);GetNativeManifest;$(_RecursiveTargetForContentCopying);GetTargetFrameworksWithPlatformForSingleTargetFramework;$(ProjectReferenceTargetsForBuild)</ProjectReferenceTargetsForBuild>

		<ProjectReferenceTargetsForCleanInOuterBuild>GetTargetFrameworks;$(ProjectReferenceTargetsForCleanInOuterBuild)</ProjectReferenceTargetsForCleanInOuterBuild>
		<ProjectReferenceTargetsForClean>Clean;GetTargetFrameworksWithPlatformForSingleTargetFramework;$(ProjectReferenceTargetsForClean)</ProjectReferenceTargetsForClean>

		<ProjectReferenceTargetsForRebuildInOuterBuild>$(ProjectReferenceTargetsForCleanInOuterBuild);$(ProjectReferenceTargetsForBuildInOuterBuild);$(ProjectReferenceTargetsForRebuildInOuterBuild)</ProjectReferenceTargetsForRebuildInOuterBuild>
		<ProjectReferenceTargetsForRebuild>$(ProjectReferenceTargetsForClean);$(ProjectReferenceTargetsForBuild);$(ProjectReferenceTargetsForRebuild)</ProjectReferenceTargetsForRebuild>

		<ProjectReferenceTargetsForPublishInOuterBuild>GetTargetFrameworks;$(ProjectReferenceTargetsForPublishInOuterBuild)</ProjectReferenceTargetsForPublishInOuterBuild>
		<ProjectReferenceTargetsForPublish>GetCopyToPublishDirectoryItems;$(ProjectReferenceTargetsForPublish)</ProjectReferenceTargetsForPublish>

		<ProjectReferenceTargetsForGetCopyToPublishDirectoryItems>GetCopyToPublishDirectoryItems;$(ProjectReferenceTargetsForGetCopyToPublishDirectoryItems)</ProjectReferenceTargetsForGetCopyToPublishDirectoryItems>
	</PropertyGroup>

	<ItemGroup Condition="'$(IsGraphBuild)' == 'true'">
		<ProjectReferenceTargets Include="Build" Targets="$(ProjectReferenceTargetsForBuildInOuterBuild)" Condition="'$(ProjectReferenceTargetsForBuildInOuterBuild)' != ''" OuterBuild="true"/>
		<ProjectReferenceTargets Include="Build" Targets="$(ProjectReferenceTargetsForBuild)" Condition="'$(ProjectReferenceTargetsForBuild)' != ''"/>

		<ProjectReferenceTargets Include="Clean" Targets="$(ProjectReferenceTargetsForCleanInOuterBuild)" Condition="'$(ProjectReferenceTargetsForCleanInOuterBuild)' != ''" OuterBuild="true"/>
		<ProjectReferenceTargets Include="Clean" Targets="$(ProjectReferenceTargetsForClean)" Condition="'$(ProjectReferenceTargetsForClean)' != ''"/>

		<ProjectReferenceTargets Include="Rebuild" Targets="$(ProjectReferenceTargetsForRebuildInOuterBuild)" Condition="'$(ProjectReferenceTargetsForRebuildInOuterBuild)' != ''" OuterBuild="true"/>
		<ProjectReferenceTargets Include="Rebuild" Targets="$(ProjectReferenceTargetsForRebuild)" Condition="'$(ProjectReferenceTargetsForRebuild)' != ''"/>

		<ProjectReferenceTargets Include="Publish" Targets="$(ProjectReferenceTargetsForPublishInOuterBuild)" Condition="'$(ProjectReferenceTargetsForPublishInOuterBuild)' != ''" OuterBuild="true"/>
		<ProjectReferenceTargets Include="Publish" Targets="$(ProjectReferenceTargetsForPublish)" Condition="'$(ProjectReferenceTargetsForPublish)' != ''"/>

		<ProjectReferenceTargets Include="GetCopyToPublishDirectoryItems" Targets="$(ProjectReferenceTargetsForGetCopyToPublishDirectoryItems)" Condition="'$(ProjectReferenceTargetsForGetCopyToPublishDirectoryItems)' != ''"/>
	</ItemGroup>

</Project>
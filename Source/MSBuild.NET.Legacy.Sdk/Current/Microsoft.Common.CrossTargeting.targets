<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
	</PropertyGroup>

	<PropertyGroup>
		<BuildInParallel Condition="'$(BuildInParallel)' == ''">true</BuildInParallel>
	</PropertyGroup>

	<Target Name="GetTargetFrameworks"
			Returns="@(_ThisProjectBuildMetadata)">
		<ItemGroup>
			<_ThisProjectBuildMetadata Include="$(MSBuildProjectFullPath)">
				<TargetFrameworks Condition="'$(TargetFrameworks)' != ''">$(TargetFrameworks)</TargetFrameworks>
				<TargetFrameworks Condition="'$(TargetFrameworks)' == ''">$(TargetFramework)</TargetFrameworks>
				<HasSingleTargetFramework>true</HasSingleTargetFramework>
				<HasSingleTargetFramework Condition="'$(IsCrossTargetingBuild)' == 'true'">false</HasSingleTargetFramework>
				<!-- indicate to caller that project is RID agnostic so that a global property RuntimeIdentifier value can be removed -->
				<IsRidAgnostic>false</IsRidAgnostic>
				<IsRidAgnostic Condition="'$(RuntimeIdentifier)' == '' AND '$(RuntimeIdentifiers)' == ''">true</IsRidAgnostic>
			</_ThisProjectBuildMetadata>
		</ItemGroup>
	</Target>

	<Target Name="_ComputeTargetFrameworkItems" Returns="@(InnerOutput)">
		<ItemGroup>
			<_TargetFramework Include="$(TargetFrameworks)"/>
			<_InnerBuildProjects Include="$(MSBuildProjectFile)">
				<AdditionalProperties>TargetFramework=%(_TargetFramework.Identity)</AdditionalProperties>
			</_InnerBuildProjects>
		</ItemGroup>
	</Target>

	<!--
	============================================================
						DispatchToInnerBuilds

		Builds this project with /t:$(InnerTarget) /p:TargetFramework=X for each
		value X in $(TargetFrameworks)

		[IN]
		$(TargetFrameworks) - Semicolon delimited list of target frameworks.
		$(InnerTargets) - The targets to build for each target framework

		[OUT]
		@(InnerOutput) - The combined output items of the inner targets across
						 all target frameworks..
	============================================================
	-->
	<Target Name="DispatchToInnerBuilds"
			DependsOnTargets="_ComputeTargetFrameworkItems"
			Returns="@(InnerOutput)">
		<!-- If this logic is changed, also update Clean -->
		<MSBuild Projects="@(_InnerBuildProjects)"
				 Condition="'@(_InnerBuildProjects)' != ''"
				 Targets="$(InnerTargets)"
				 BuildInParallel="$(BuildInParallel)">
			<Output ItemName="InnerOutput" TaskParameter="TargetOutputs"/>
		</MSBuild>
	</Target>

	<!--
	============================================================
								Build

	Multi-targeting version of Build.

	[IN]
	$(TargetFrameworks) - Semicolon delimited list of target frameworks.

	$(InnerTargets)     - The targets to build for each target framework. Defaults
						  to 'Build' if unset, but allows override to support
						  `msbuild /p:InnerTargets=X;Y;Z` which will build X, Y,
						  and Z targets for each target framework.

	[OUT]
	@(InnerOutput) - The combined output items of the inner targets across
						all builds.
	============================================================
	-->
	<Target Name="Build" DependsOnTargets="_SetBuildInnerTarget;DispatchToInnerBuilds"/>

	<Target Name="_SetBuildInnerTarget" Returns="@(InnerOutput)">
		<PropertyGroup Condition="'$(InnerTargets)' == ''">
			<InnerTargets>Build</InnerTargets>
		</PropertyGroup>
	</Target>


	<!--
	============================================================
							Clean

	Multi-targeting version of clean.

	Inner-build dispatch is a clone of DispatchToInnerBuilds;
	the only reason it's replicated is that it must be a different
	target to be run in the same build (e.g. by Rebuild or by
	a /t:Clean;Build invocation.
	============================================================
	-->
	<Target Name="Clean"
			DependsOnTargets="_ComputeTargetFrameworkItems">
		<!-- If this logic is changed, also update DispatchToInnerBuilds -->
		<MSBuild Projects="@(_InnerBuildProjects)"
				 Condition="'@(_InnerBuildProjects)' != ''"
				 Targets="Clean"
				 BuildInParallel="$(BuildInParallel)"/>
	</Target>

	<!--
	============================================================
							Rebuild

	Multi-targeting version of rebuild.
	============================================================
	-->
	<Target Name="Rebuild" DependsOnTargets="Clean;Build"/>

	<Import Project="$(MSBuildThisFileDirectory)NuGet.AfterCommon.targets"/>

</Project>
<Project>

	<!--
		These are different than the defaults set by either `Microsoft.Common.targets` or the `Microsoft.NET.Sdk`.
		These follow the following style, one within the Project and one common to all Projects within a Solution.

		:Project
		├───<Builds>
		│	├───<Final>
		│	│	├───Release
		│	│	└───Debug-Linux
		│	└───<Interim>
		|		|•••
		└───<Publish>
			|•••

		:Solution
		├───<Builds>
		│	├───Project.1
		│	│	├───<Final>
		│	│	│	├───Release
		│	│	│	└───Debug-Windows
		│	│	└───<Interim>
		|	|		|•••
		│	├───Project.2
		│	└───Project.3
		└───<Publish>
			├───Project.2.pkg (file)
			└───Project.3.pub (folder)
				|•••
	-->

	<Import Project="MSBuild.OutputPaths.props" Condition="'$(ImportedMSBuildOutputPathsProps)' != 'true'"/>

	<PropertyGroup Label="Outputs">
		<InterimOutputFolder Condition="'$(InterimOutputFolder)' == ''">interim</InterimOutputFolder>
		<InterimOutputPath>$([System.IO.Path]::Join('$(BuildPath)', '$(InterimOutputFolder)'))</InterimOutputPath>
		<InterimOutputPath>$([MSBuild]::EnsureTrailingSlash('$(InterimOutputPath)'))</InterimOutputPath>

		<FinalOutputFolder Condition="'$(FinalOutputFolder)' == ''">final</FinalOutputFolder>
		<FinalOutputPath>$([System.IO.Path]::Join('$(BuildPath)', '$(FinalOutputFolder)'))</FinalOutputPath>
		<FinalOutputPath>$([MSBuild]::EnsureTrailingSlash('$(FinalOutputPath)'))</FinalOutputPath>
	</PropertyGroup>

	<!--
		Create new Target paths by appending Output paths with `$(BuildContext)` value,
		so that the output from the multi-targeted builds don't overwrite each other.
	-->
	<PropertyGroup Label="Outputs">
		<BuildContext>$(BuildContext.Trim('-'))</BuildContext>
		<InterimTargetPath>$([System.IO.Path]::Join('$(InterimOutputPath)', '$(BuildContext)'))</InterimTargetPath>
		<InterimTargetPath>$([MSBuild]::EnsureTrailingSlash('$(InterimTargetPath)'))</InterimTargetPath>
		<FinalTargetPath>$([System.IO.Path]::Join('$(FinalOutputPath)', '$(BuildContext)'))</FinalTargetPath>
		<FinalTargetPath>$([MSBuild]::EnsureTrailingSlash('$(FinalTargetPath)'))</FinalTargetPath>
	</PropertyGroup>

	<!-- Set `$(PublishPath)` here, before any custom publish targets, to avoid a competing default there. -->
	<PropertyGroup Label="Publish">
		<PublishFolder Condition="'$(PublishFolder)' == ''">publish</PublishFolder>
		<PublishPath Condition="'$(PublishPath)' == ''">$(PublishFolder)</PublishPath>
	</PropertyGroup>

	<PropertyGroup Label="Publish" Condition="$([System.IO.Path]::IsPathRooted('$(PublishPath)'))">
		<AppendProjectNameToPublishPath Condition="'$(AppendProjectNameToPublishPath)' == ''">true</AppendProjectNameToPublishPath>
		<PublishPath Condition="'$(AppendProjectNameToPublishPath)' == 'true' AND !$(PublishPath.StartsWith('$(MSBuildProjectDirectory)'))">$([System.IO.Path]::Join('$(PublishPath)', '$(ProjectName)'))</PublishPath>
	</PropertyGroup>

	<PropertyGroup Label="Publish">
		<PublishPath>$([MSBuild]::EnsureTrailingSlash('$(PublishPath)'))</PublishPath>
	</PropertyGroup>

	<!-- Set `$(DefaultItemExcludes)` property for output paths that should be excluded from the default items only when under project directory. -->
	<PropertyGroup Condition="!$([System.IO.Path]::IsPathRooted('$(PublishPath)')) OR $(PublishPath.StartsWith('$(MSBuildProjectDirectory)'))">
		<!-- Exclude publish directory, by default -->
		<DefaultItemExcludes>$(DefaultItemExcludes);$(PublishPath)**</DefaultItemExcludes>
	</PropertyGroup>

	<PropertyGroup>
		<ImportedMSBuildOutputPathsTargets>true</ImportedMSBuildOutputPathsTargets>
	</PropertyGroup>

</Project>
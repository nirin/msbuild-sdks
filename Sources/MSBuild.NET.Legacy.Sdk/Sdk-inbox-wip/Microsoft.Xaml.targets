<Project>

	<!-- Load `XamlBuildTask.dll`, this can be overridden to use a different version with `XamlBuildTaskAssembly` properties -->
	<PropertyGroup>
		<XamlBuildTaskPath Condition="'$(XamlBuildTaskPath)' == ''">$(MSBuildFrameworkToolsPath)</XamlBuildTaskPath>
		<XamlBuildTaskLocation Condition="'$(XamlBuildTaskLocation)' == ''">$(XamlBuildTaskPath)</XamlBuildTaskLocation>
		<XamlBuildTaskAssemblyFile Condition="'$(XamlBuildTaskAssemblyFile)' == ''">$([System.IO.Path]::Combine('$(XamlBuildTaskPath)', 'XamlBuildTask.dll'))</XamlBuildTaskAssemblyFile>
		<XamlBuildTaskAssemblyName Condition="'$(XamlBuildTaskAssemblyName)' == ''">XamlBuildTask, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35</XamlBuildTaskAssemblyName>
	</PropertyGroup>

	<UsingTask AssemblyFile="$(XamlBuildTaskAssemblyFile)" Condition="'$(ResolveTasksFromAssemblyName)' != 'true'" TaskName="Microsoft.Build.Tasks.Xaml.PartialClassGenerationTask"/>
	<UsingTask AssemblyName="$(XamlBuildTaskAssemblyName)" Condition="'$(ResolveTasksFromAssemblyName)' == 'true'" TaskName="Microsoft.Build.Tasks.Xaml.PartialClassGenerationTask"/>

	<UsingTask AssemblyFile="$(XamlBuildTaskAssemblyFile)" Condition="'$(ResolveTasksFromAssemblyName)' != 'true'" TaskName="Microsoft.Build.Tasks.Xaml.GenerateTemporaryAssemblyTask"/>
	<UsingTask AssemblyName="$(XamlBuildTaskAssemblyName)" Condition="'$(ResolveTasksFromAssemblyName)' == 'true'" TaskName="Microsoft.Build.Tasks.Xaml.GenerateTemporaryAssemblyTask"/>

	<UsingTask AssemblyFile="$(XamlBuildTaskAssemblyFile)" Condition="'$(ResolveTasksFromAssemblyName)' != 'true'" TaskName="Microsoft.Build.Tasks.Xaml.CompilationPass2Task"/>
	<UsingTask AssemblyName="$(XamlBuildTaskAssemblyName)" Condition="'$(ResolveTasksFromAssemblyName)' == 'true'" TaskName="Microsoft.Build.Tasks.Xaml.CompilationPass2Task"/>

	<PropertyGroup>
		<XamlRequiresCompilationPass2 Condition="'$(XamlRequiresCompilationPass2)' == ''">false</XamlRequiresCompilationPass2>
		<XamlTemporaryAssemblyName Condition="'$(XamlTemporaryAssemblyName)' == ''">$(AssemblyName)</XamlTemporaryAssemblyName>
		<CompileTargetNameForTemporaryAssembly Condition="'$(CompileTargetNameForTemporaryAssembly)' == ''">CompileTemporaryAssembly</CompileTargetNameForTemporaryAssembly>
	</PropertyGroup>

	<PropertyGroup>
		<XamlPass2FlagFile Condition="'$(XamlPass2FlagFile)' == ''">$(MSBuildProjectFile).XamlPass2Flag.txt</XamlPass2FlagFile>
		<XamlGenCodeFileNames Condition="'$(XamlGenCodeFileNames)' == ''">$(MSBuildProjectFile).XamlGeneratedCodeFileListAbsolute.txt</XamlGenCodeFileNames>
		<XamlGenMarkupFileNames Condition="'$(XamlGenMarkupFileNames)' == ''">$(MSBuildProjectFile).XamlGeneratedXamlFileListAbsolute.txt</XamlGenMarkupFileNames>
	</PropertyGroup>

	<ItemGroup Condition="'$(BuildingInsideVisualStudio)' == 'true'">
		<AvailableItemName Include="XamlAppDef"/>
	</ItemGroup>

	<!--
		The 'Microsoft.Xaml.targets' needs to be included after 'Microsoft.FX.targets' and 'Microsoft.DevDiv.targets'
		to have a chance to add these tasks to the PrepareResources target's dependencies.
		Unfortunately, 'Microsoft.DevDiv.targets' completely overwrites the PrepareResourcesDependsOn property
		(as a bug workaround-see comment there).
	-->
	<PropertyGroup>
		<PrepareResourcesDependsOn>
			XamlMarkupCompilePass1;
			XamlMarkupCompilePass2;
			$(PrepareResourcesDependsOn)
		</PrepareResourcesDependsOn>
	</PropertyGroup>

	<PropertyGroup>
		<LoadTimeSensitiveProperties>
			$(LoadTimeSensitiveProperties);
		</LoadTimeSensitiveProperties>
		<LoadTimeSensitiveTargets>
			$(LoadTimeSensitiveTargets);
			XamlMarkupCompilePass1;
		</LoadTimeSensitiveTargets>
	</PropertyGroup>

	<!--
	================================================================
					DesignTimeXamlMarkupCompilation
	================================================================
	-->
	<PropertyGroup>
		<CoreCompileDependsOn Condition="'$(BuildingInsideVisualStudio)' == 'true'">
			DesignTimeXamlMarkupCompilation;
			$(CoreCompileDependsOn)
		</CoreCompileDependsOn>
	</PropertyGroup>

	<PropertyGroup>
		<DesignTimeIntermediateOutputPath Condition="'$(DesignTimeIntermediateOutputPath)' == ''">$(IntermediateOutputPath)InProcessTempFiles\</DesignTimeIntermediateOutputPath>
	</PropertyGroup>

	<Target Name="DesignTimeXamlMarkupCompilation">
		<!-- Make sure the directory exists. -->
		<MakeDir Directories="$(DesignTimeIntermediateOutputPath)" Condition="'@(XamlAppDef)' != ''"/>

		<CallTarget Condition="'$(BuildingProject)' != 'true' AND '@(XamlAppDef)' != ''"
			Targets="InProcessXamlMarkupCompilePass1"/>
	</Target>

	<!--
	================================================================
					InProcessXamlMarkupCompilePass1
	================================================================
	-->
	<Target Name="InProcessXamlMarkupCompilePass1"
			Condition="'@(XamlAppDef)' != '' AND '$(BuildingProject)' != 'true'">

		<PartialClassGenerationTask
			BuildTaskPath="$(XamlBuildTaskPath)"
			OutputPath="$(DesignTimeIntermediateOutputPath)"
			Language="$(Language)"
			ApplicationMarkup="@(XamlAppDef)"
			References="@(ReferencePath)"
			RootNamespace="$(RootNamespace)"
			SourceCodeFiles="@(Compile)"
			AssemblyName="$(AssemblyName)"
			IsInProcessXamlMarkupCompile="true"
			MSBuildProjectDirectory="$(MSBuildProjectDirectory)"
			XamlBuildTypeInspectionExtensionNames="@(XamlBuildTaskTypeInspectionExtensionName)"
			XamlBuildTypeGenerationExtensionNames="@(XamlBuildTaskTypeGenerationExtensionName)">

			<Output ItemName="XamlInProcessGeneratedCodeFiles" TaskParameter="GeneratedCodeFiles"/>
			<Output ItemName="XamlInProcessGeneratedResources" TaskParameter="GeneratedResources"/>
			<!-- This property is not required. However we need to populate it as the output of the task. -->
			<Output PropertyName="XamlInProcessRequiresCompilationPass2" TaskParameter="RequiresCompilationPass2"/>
		</PartialClassGenerationTask>

		<ItemGroup>
			<Compile Include="@(XamlInProcessGeneratedCodeFiles)"/>
		</ItemGroup>
	</Target>

	<!--
	================================================================
					CleanInProcessXamlGeneratedFiles
	================================================================
	-->
	<Target Name="CleanInProcessXamlGeneratedFiles"
			Condition="'@(XamlAppDef)' != '' And '$(BuildingInsideVisualStudio)' != 'true'"
			AfterTargets="DesignTimeXamlMarkupCompilation">

		<ItemGroup>
			<FileWrites Include="$(DesignTimeIntermediateOutputPath)\*"/>
		</ItemGroup>
	</Target>

	<!--
	================================================================
				XamlMarkupCompileReadGeneratedFileList
	================================================================
	-->
	<Target Name="XamlMarkupCompileReadGeneratedFileList"
			Condition="'@(XamlPage)' != '' OR '@(XamlAppDef)' != ''"
			BeforeTargets="XamlMarkupCompilePass1">

		<ReadLinesFromFile File="$(IntermediateOutputPath)$(XamlGenCodeFileNames)">
			<Output TaskParameter="Lines" ItemName="XamlOutputCodeFilesList"/>
		</ReadLinesFromFile>

		<ReadLinesFromFile File="$(IntermediateOutputPath)$(XamlGenMarkupFileNames)">
			<Output TaskParameter="Lines" ItemName="XamlOutputMarkupFilesList"/>
		</ReadLinesFromFile>
	</Target>

	<!--
	================================================================
						XamlMarkupCompilePass1
	================================================================
	-->
	<Target Name="XamlMarkupCompilePass1"
			Condition="'@(XamlPage)' != '' OR '@(XamlAppDef)' != ''"
			Inputs="@(XamlAppDef);@(Compile);$(MSBuildAllProjects);@(ReferencePath)"
			Outputs="@(XamlOutputMarkupFilesList);
					@(XamlOutputCodeFilesList);
					$(IntermediateOutputPath)$(XamlGenCodeFileNames);
					$(IntermediateOutputPath)$(XamlGenMarkupFileNames);
					$(IntermediateOutputPath)$(XamlPass2FlagFile);">

		<Message Text="(in) XamlPage: '@(XamlPage)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>
		<Message Text="(in) XamlAppDef: '@(XamlAppDef)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>
		<Message Text="(in) SourceCodeFiles: '@(Compile)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>

		<ItemGroup>
			<XamlGeneratedResources Remove="@(XamlGeneratedResources)"/>
			<XamlGeneratedCodeFiles Remove="@(XamlGeneratedCodeFiles)"/>
		</ItemGroup>

		<PartialClassGenerationTask
			BuildTaskPath="$(XamlBuildTaskPath)"
			OutputPath="$(IntermediateOutputPath)"
			Language="$(Language)"
			ApplicationMarkup="@(XamlAppDef)"
			References="@(ReferencePath)"
			RootNamespace="$(RootNamespace)"
			SourceCodeFiles="@(Compile)"
			AssemblyName="$(AssemblyName)"
			IsInProcessXamlMarkupCompile="false"
			MSBuildProjectDirectory="$(MSBuildProjectDirectory)"
			XamlBuildTypeGenerationExtensionNames="@(XamlBuildTaskTypeGenerationExtensionName)"
			XamlBuildTypeInspectionExtensionNames="@(XamlBuildTaskTypeInspectionExtensionName)">

			<Output ItemName="XamlGeneratedCodeFiles" TaskParameter="GeneratedCodeFiles"/>
			<Output ItemName="XamlGeneratedResources" TaskParameter="GeneratedResources"/>
			<Output ItemName="XamlFileNames" TaskParameter="ApplicationMarkup"/>

			<Output PropertyName="XamlRequiresCompilationPass2" TaskParameter="RequiresCompilationPass2"/>
		</PartialClassGenerationTask>

		<WriteLinesToFile
			File="$(IntermediateOutputPath)$(XamlGenCodeFileNames)"
			Lines="@(XamlGeneratedCodeFiles)"
			Overwrite="true"/>

		<WriteLinesToFile
			File="$(IntermediateOutputPath)$(XamlGenMarkupFileNames)"
			Lines="@(XamlGeneratedResources)"
			Overwrite="true"/>

		<WriteLinesToFile
			File="$(IntermediateOutputPath)$(XamlPass2FlagFile)"
			Lines="@(XamlRequiresCompilationPass2)"
			Overwrite="true"/>

		<Message Text="(out) XamlGeneratedCodeFiles: '@(XamlGeneratedCodeFiles)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>
		<Message Text="(out) XamlGeneratedResources: '@(XamlGeneratedResources)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>
		<Message Text="(out) XamlRequiresCompilationPass2 : '$(XamlRequiresCompilationPass2)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>
	</Target>

	<!--
	================================================================
					XamlMarkupCompileAddFilesGenerated
	================================================================
	-->
	<Target Name="XamlMarkupCompileAddFilesGenerated"
			Condition="'@(XamlPage)' != '' OR '@(XamlAppDef)' != ''"
			AfterTargets="XamlMarkupCompilePass1">

		<ItemGroup>
			<XamlGeneratedCodeFiles Condition="'@(XamlGeneratedCodeFiles)' == ''"
									Include="@(XamlOutputCodeFilesList)"/>

			<XamlGeneratedResources Condition="'@(XamlGeneratedResources)' == ''"
									Include="@(XamlOutputMarkupFilesList)"/>

			<FileWrites Include="@(XamlGeneratedResources);
								@(XamlGeneratedCodeFiles);
								$(IntermediateOutputPath)$(XamlGenCodeFileNames);
								$(IntermediateOutputPath)$(XamlGenMarkupFileNames)"/>

			<Compile Include="@(XamlGeneratedCodeFiles)"/>

			<EmbeddedResource Include="@(XamlGeneratedResources)">
				<GenerateResource>false</GenerateResource>
				<Type>Non-Resx</Type>
				<WithCulture>false</WithCulture>
			</EmbeddedResource>
		</ItemGroup>
	</Target>

	<!--
	================================================================
					XamlMarkupCompileReadPass2Flag
	================================================================
	-->
	<Target Name="XamlMarkupCompileReadPass2Flag"
			Condition="'@(XamlPage)' != '' OR '@(XamlAppDef)' != ''"
			BeforeTargets="XamlMarkupCompilePass2;XamlTemporaryAssemblyGeneration">

		<ReadLinesFromFile File="$(IntermediateOutputPath)$(XamlPass2FlagFile)">
			<Output TaskParameter="Lines" ItemName="XamlRequiresCompilationPass2"/>
		</ReadLinesFromFile>
	</Target>

	<!--
	================================================================
					XamlTemporaryAssemblyGeneration
	================================================================
	-->
	<Target Name="XamlTemporaryAssemblyGeneration"
			Condition="'$(XamlRequiresCompilationPass2)' == 'true' "
			Inputs="@(XamlAppDef);@(Compile);$(MSBuildAllProjects);@(XamlGeneratedCodeFiles);@(ReferencePath)"
			Outputs="$(IntermediateOutputPath)$(XamlTemporaryAssemblyName).dll;
					$(IntermediateOutputPath)$(XamlTemporaryAssemblyName).pdb"
			DependsOnTargets="XamlMarkupCompilePass1;MarkupCompilePass1">

		<Message Text="(in) MSBuildProjectFile: '$(MSBuildProjectFile)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>
		<Message Text="(in) CompileTargetName: '$(CompileTargetName)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>
		<Message Text="(in) SourceCodeFiles: '@(XamlGeneratedCodeFiles)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>

		<GenerateTemporaryAssemblyTask
			OutputPath="$(IntermediateOutputPath)"
			CurrentProject="$(MSBuildProjectFullPath)"
			SourceCodeFiles="@(XamlGeneratedCodeFiles);@(_GeneratedCodeFiles)"
			AssemblyName="$(XamlTemporaryAssemblyName)"
			ApplicationMarkupTypeName="XamlAppDef"
			CompileTargetName="$(CompileTargetNameForTemporaryAssembly)"
			ReferencePaths="@(ReferencePath)"
			GeneratedResourcesFiles="@(XamlGeneratedResources)">
		</GenerateTemporaryAssemblyTask>

		<PropertyGroup>
			<_XamlTemporaryAssemblyPath_>$(IntermediateOutputPath)$(XamlTemporaryAssemblyName).dll</_XamlTemporaryAssemblyPath_>
			<NonExistentFile>__NonExistentSubDir__\__NonExistentFile__</NonExistentFile>
		</PropertyGroup>

		<ItemGroup>
			<FileWrites Include="$(IntermediateOutputPath)$(XamlTemporaryAssemblyName).*"/>
		</ItemGroup>
	</Target>

	<Target Name="CompileTemporaryAssembly" DependsOnTargets="BuildOnlySettings;ResolveKeySource;_GenerateCompileInputs;CoreCompile"/>

	<!--
	================================================================
						XamlMarkupCompilePass2
	================================================================
	-->
	<Target Name="XamlMarkupCompilePass2"
			Condition="'$(XamlRequiresCompilationPass2)' == 'true' "
			Outputs="@(ExtensionGeneratedCodeFiles)"
			DependsOnTargets="XamlTemporaryAssemblyGeneration">

		<Message Text="(in) XamlPage: '@(XamlPage)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>
		<Message Text="(in) XamlAppDef: '@(XamlAppDef)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>
		<Message Text="(in) References: '@(ReferencePath);$(_XamlTemporaryAssemblyPath_)'" Condition="'$(MSBuildTargetsVerbose)' == 'true'"/>

		<CompilationPass2Task
			BuildTaskPath="$(XamlBuildTaskPath)"
			ApplicationMarkup="@(XamlAppDef)"
			References="@(ReferencePath)"
			LocalAssemblyReference="$(_XamlTemporaryAssemblyPath_)"
			AssemblyName="$(AssemblyName)"
			RootNamespace="$(RootNamespace)"
			OutputPath="$(IntermediateOutputPath)"
			Language="$(Language)"
			SourceCodeFiles="@(Compile)"
			IsInProcessXamlMarkupCompile="false"
			MSBuildProjectDirectory="$(MSBuildProjectDirectory)"
			MSBuildArchitecture="$(PlatformTargetAsMSBuildArchitecture)"
			XamlBuildTypeInspectionExtensionNames="@(XamlBuildTaskTypeInspectionExtensionName)"
			ApplicationMarkupWithTypeName="@(XamlFileNames)">

			<Output ItemName="ExtensionGeneratedCodeFiles" TaskParameter="ExtensionGeneratedCodeFiles"/>
		</CompilationPass2Task>

		<WriteLinesToFile
			File="$(IntermediateOutputPath)$(XamlPass2FlagFile)"
			Lines="false"
			Overwrite="true"/>

		<Message Text="(out) ExtensionGeneratedCodeFiles: '@(ExtensionGeneratedCodeFiles)'"/>

		<!-- Add extension files to the list of generated files so that they can be monitored and cleaned up -->
		<WriteLinesToFile
			File="$(IntermediateOutputPath)$(XamlGenCodeFileNames)"
			Lines="@(ExtensionGeneratedCodeFiles)"
			Overwrite="false"/>
	</Target>

	<!--
	================================================================
					XamlMarkupCompileAddFilesGenerated
	================================================================
	-->
	<Target Name="XamlMarkupCompileAddExtensionFilesGenerated"
			Condition="'@(XamlPage)' != '' OR '@(XamlAppDef)' != ''"
			AfterTargets="XamlMarkupCompilePass2">

		<ItemGroup>
			<FileWrites Include="@(ExtensionGeneratedCodeFiles)"/>
		</ItemGroup>

		<ItemGroup>
			<Compile Include="@(ExtensionGeneratedCodeFiles)"/>
		</ItemGroup>
	</Target>

	<!--
	================================================================
					GetCopyToOutputDirectoryXamlAppDefs

	Get all XamlAppDefs that may need to be transferred to the output directory.
	Compare GetCopyToOutputDirectoryItems in 'Microsoft.Common.targets'
	================================================================
	-->
	<Target Name="GetCopyToOutputDirectoryXamlAppDefs" BeforeTargets="GetCopyToOutputDirectoryItems">

		<ItemGroup>
			<_XamlAppDefItemsToCopy Include="@(XamlAppDef->'%(FullPath)')" Condition="'%(XamlAppDef.CopyToOutputDirectory)' == 'Always' OR '%(XamlAppDef.CopyToOutputDirectory)' == 'PreserveNewest'"/>
		</ItemGroup>

		<AssignTargetPath Files="@(_XamlAppDefItemsToCopy)" RootFolder="$(MSBuildProjectDirectory)">
			<Output TaskParameter="AssignedFiles" ItemName="_XamlAppDefItemsToCopyWithTargetPath"/>
		</AssignTargetPath>

		<!-- The _SourceItems properties are internal to 'Microsoft.Common.targets', but necessary to use here because there is no public equivalent -->
		<ItemGroup>
			<AllItemsFullPathWithTargetPath            Include="@(_XamlAppDefItemsToCopyWithTargetPath)"/>
			<_SourceItemsToCopyToOutputDirectoryAlways Include="@(_XamlAppDefItemsToCopyWithTargetPath)" Condition="'%(_XamlAppDefItemsToCopyWithTargetPath.CopyToOutputDirectory)' == 'Always'"/>
			<_SourceItemsToCopyToOutputDirectory       Include="@(_XamlAppDefItemsToCopyWithTargetPath)" Condition="'%(_XamlAppDefItemsToCopyWithTargetPath.CopyToOutputDirectory)' == 'PreserveNewest'"/>
		</ItemGroup>
	</Target>

</Project>
<Project InitialTargets="Initialize" DefaultTargets="Summary">

	<PropertyGroup>
		<SolutionName Condition="'$(SolutionName)' == ''">$(MSBuildSolutionName)</SolutionName>
		<RootNamespace Condition="'$(RootNamespace)' == ''">$(SolutionName)</RootNamespace>
	</PropertyGroup>

	<PropertyGroup>
		<PublishName Condition="'$(PublishName)' == ''">$(SolutionName)</PublishName>
	</PropertyGroup>

	<!--
		Append `$(BuildContext)` with the properties that's used in multi-targeting to identify targeted builds.
		Here, we're using dash (`-`) as the separator to join the properties together that identifies a build.
		This can be used to generate unique names for the output artifacts from a publish target.
	-->

	<PropertyGroup Condition="'$(Configuration)' != ''">
		<BuildContext Condition="!('$(BuildContext)' == '' OR $(BuildContext.EndsWith('-')))">$(BuildContext)-</BuildContext>
		<BuildContext>$(BuildContext)$(Configuration)</BuildContext>
	</PropertyGroup>

	<!-- Do not append `$(Platform)` if it is `Any` since it is implicitly implied. -->
	<PropertyGroup Condition="'$(Platform)' != '' AND '$(Platform)' != 'Any'">
		<BuildContext Condition="!('$(BuildContext)' == '' OR $(BuildContext.EndsWith('-')))">$(BuildContext)-</BuildContext>
		<BuildContext>$(BuildContext)$(Platform)</BuildContext>
	</PropertyGroup>

	<!--
	========================================================================================================================
														TARGETS
	========================================================================================================================
	-->

	<!-- Graph Build with ProjectReference -->
	<ItemGroup>
		<ProjectReferenceTargets Include="Initialize" Targets="Initialize"/>
		<ProjectReferenceTargets Include="Summary" Targets="Summary"/>
	</ItemGroup>

	<!-- Targets for the Solution Context -->

	<PropertyGroup>
		<!-- Initialize -->
		<InitializeDependsOn>ResolveReferences</InitializeDependsOn>
		<!-- Summary -->
		<SummaryDependsOn>ResolveReferences</SummaryDependsOn>
	</PropertyGroup>

	<!-- Initial Target for the Solution Context -->

	<Target Name="Initialize" DependsOnTargets="$(InitializeDependsOn)">
		<Message Importance="Low" Text="$(MSBuildSolutionName) is initializing."/>

		<MSBuild
			Targets="Initialize"
			Projects="@(_ResolvedProject->'%(HintPath)')"
			Properties="%(_ResolvedProject.Properties)"
			BuildInParallel="$(BuildInParallel)"
			ContinueOnError="$(ContinueOnError)"
			StopOnFirstFailure="$(StopOnFirstFailure)"
			SkipNonexistentTargets="$(SkipNonExistentTargets)"
			SkipNonexistentProjects="$(SkipNonExistentProjects)"/>

		<Message Importance="Low" Text="$(MSBuildSolutionName) is initialized."/>
	</Target>

	<!-- Default Target for the Solution Context -->

	<Target Name="Summary" DependsOnTargets="$(SummaryDependsOn)">
		<Message Importance="High" Text="$(MSBuildSolutionName) ($(Configuration)|$(Platform)) [$(MSBuildSolutionDirectory)]"/>

		<MSBuild
			Targets="Summary"
			Projects="@(_ResolvedProject->'%(HintPath)')"
			Properties="%(_ResolvedProject.Properties)"
			BuildInParallel="$(BuildInParallel)"
			ContinueOnError="$(ContinueOnError)"
			StopOnFirstFailure="$(StopOnFirstFailure)"
			SkipNonexistentTargets="$(SkipNonExistentTargets)"
			SkipNonexistentProjects="$(SkipNonExistentProjects)"/>

		<Message Importance="High" Text="These are all the summaries of the projects present/found in $(MSBuildSolutionName) solution."/>
	</Target>

</Project>
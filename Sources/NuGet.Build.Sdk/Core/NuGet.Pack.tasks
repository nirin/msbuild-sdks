<Project>

	<!-- Load `NuGet.Build.Tasks.Pack.dll`, this can be overridden to use a different version with `NuGetPackTasksAssembly` -->
	<PropertyGroup Condition="$(NuGetPackTasksAssembly) == ''">
		<NuGetPackTasksAssemblyFile Condition="'$(NuGetPackTasksAssemblyFile)' == ''">NuGet.Build.Tasks.Pack.dll</NuGetPackTasksAssemblyFile>
		<NuGetPackTasksPath Condition="'$(NuGetPackTasksPath)' == ''">..\Tasks\$(MSBuildRuntimeType)</NuGetPackTasksPath>
		<NuGetPackTasksAssembly>$(NuGetPackTasksPath)\$(NuGetPackTasksAssemblyFile)</NuGetPackTasksAssembly>
	</PropertyGroup>

	<!-- NuGet's Common Tasks -->
	<UsingTask AssemblyFile="$(NuGetPackTasksAssembly)" TaskName="NuGet.Build.Tasks.GetProjectTargetFrameworksTask"/>

	<!-- NuGet's Pack specific Tasks -->
	<UsingTask AssemblyFile="$(NuGetPackTasksAssembly)" TaskName="NuGet.Build.Tasks.Pack.PackTask"/>
	<UsingTask AssemblyFile="$(NuGetPackTasksAssembly)" TaskName="NuGet.Build.Tasks.Pack.GetPackOutputItemsTask"/>
	<UsingTask AssemblyFile="$(NuGetPackTasksAssembly)" TaskName="NuGet.Build.Tasks.Pack.IsPackableFalseWarningTask"/>
	<UsingTask AssemblyFile="$(NuGetPackTasksAssembly)" TaskName="NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask"/>

</Project>